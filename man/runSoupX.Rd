% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSoupX.R
\name{runSoupX}
\alias{runSoupX}
\title{Detecting contamination with SoupX}
\usage{
runSoupX(
  inSCE,
  sample = NULL,
  useAssay = "counts",
  background = NULL,
  bgAssayName = NULL,
  bgBatch = NULL,
  assayName = ifelse(is.null(background), "SoupX", "SoupX_bg"),
  cluster = NULL,
  tfidfMin = 1,
  soupQuantile = 0.9,
  adjustMethod = c("subtraction", "soupOnly", "multinomial"),
  roundToInt = FALSE,
  pCut = 0.01
)
}
\arguments{
\item{inSCE}{A \linkS4class{SingleCellExperiment} object.}

\item{sample}{A single character specifying a name that can be found in
\code{colData(inSCE)} to directly use the cell annotation; or a character
vector with as many elements as cells to indicates which sample each cell
belongs to. SoupX will be run on cells from each sample separately. Default 
\code{NULL}.}

\item{useAssay}{A single character string specifying which assay in 
\code{inSCE} to use. Default \code{'counts'}.}

\item{background}{A numeric matrix of counts or a 
\linkS4class{SingleCellExperiment} object with the matrix in \code{assay} 
slot. It should have the same structure as \code{inSCE} except it contains 
the matrix including empty droplets. Default \code{NULL}.}

\item{bgAssayName}{A single character string specifying which assay in 
\code{background} to use when \code{background} is a 
\linkS4class{SingleCellExperiment} object. If \code{NULL}, the function
will use the same value as \code{useAssay}. Default \code{NULL}.}

\item{bgBatch}{The same thing as \code{sample} but for \code{background}. Can
be a single character only when \code{background} is a 
\linkS4class{SingleCellExperiment} object. Default \code{NULL}.}

\item{assayName}{A single character string of the output corrected matrix. 
Default \code{"SoupX"} when not using a background, otherwise, 
\code{"SoupX_bg"}.}

\item{cluster}{Prior knowledge of clustering labels on cells. A single 
character string for specifying clustering label stored in 
\code{colData(inSCE)}, or a character vector with as many elements as cells.
When not supplied, SCTK default clustering method will be applied (see 
\href{https://camplab.net/sctk/v2.4.1/articles/articles/console_analysis_tutorial.html#normalization}{detail}).}

\item{tfidfMin}{SoupX parameter for \link[SoupX]{autoEstCont}. Minimum value 
of tfidf to accept for a marker gene. Default \code{1}. See 
\code{?SoupX::autoEstCont}.}

\item{soupQuantile}{SoupX parameter for \link[SoupX]{autoEstCont}. Only use 
genes that are at or above this expression quantile in the soup. This 
prevents inaccurate estimates due to using genes with poorly constrained 
contribution to the background. Default \code{0.9}. See 
\code{?SoupX::autoEstCont}.}

\item{adjustMethod}{SoupX parameter for \link[SoupX]{adjustCounts}. Method to
use for correction. One of \code{'multinomial'}, \code{'soupOnly'}, or 
\code{'subtraction'}. See \code{?SoupX::adjustCounts}.}

\item{roundToInt}{SoupX parameter for \link[SoupX]{adjustCounts}. Should the 
resulting matrix be rounded to integers? Default \code{FALSE}. See 
\code{?SoupX::adjustCounts}.}

\item{pCut}{SoupX parameter for \link[SoupX]{adjustCounts}. The p-value 
cut-off used when \code{method = 'soupOnly'}. Default \code{0.01}. See 
\code{?SoupX::adjustCounts}.}
}
\value{
The input \code{inSCE} object with \code{soupX_nUMIs}, 
\code{soupX_clustrers}, \code{soupX_contamination} added to \code{colData} 
slot; \code{soupX_{sample}_est} and \code{soupX_{sample}_counts} for each 
sample added in \code{rowData} slot; and other computation metrics at 
\code{getSoupX(inSCE)}. Replace "soupX" to "soupX_bg" when \code{background}
is used.
}
\description{
A wrapper function for \link[SoupX]{adjustCounts}. Identify
potential contamination from experimental factors such as ambient RNA. Visit
\href{https://rawcdn.githack.com/constantAmateur/SoupX/204b602418df12e9fdb4b68775a8b486c6504fe4/inst/doc/pbmcTutorial.html}{their vignette}
for better understanding.
}
\author{
Yichen Wang
}
