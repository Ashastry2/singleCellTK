% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scanpyFunctions.R
\name{runScanpyUMAP}
\alias{runScanpyUMAP}
\title{runScanpyUMAP
Computes UMAP from the given sce object and stores the UMAP computations back
into the sce object}
\usage{
runScanpyUMAP(
  inSCE,
  useReduction = "scanpyPCA",
  reducedDimName = "scanpyUMAP",
  dims = 10L,
  minDist = 0.5,
  nNeighbors = 15L,
  spread = 1,
  alpha = 1,
  gamma = 1,
  externalReduction = NULL
)
}
\arguments{
\item{inSCE}{(sce) object on which to compute the UMAP}

\item{useReduction}{Reduction to use for computing UMAP. Default is \code{"pca"}.}

\item{reducedDimName}{Name of new reducedDims object containing Scanpy UMAP
Default \code{scanpyUMAP}.}

\item{dims}{Numerical value of how many reduction components to use for UMAP
computation. Default \code{10}.}

\item{minDist}{Sets the \code{"min_dist"} parameter to the underlying UMAP
call. Default \code{0.5}.}

\item{nNeighbors}{Sets the \code{"n_neighbors"} parameter to the underlying
UMAP call. Default \code{15L}.}

\item{spread}{Sets the \code{"spread"} parameter to the underlying UMAP call.
Default \code{1}.
#' @param alpha Sets the \code{"alpha"} parameter to the underlying UMAP call.
Default \code{1}.
#' @param gamma Sets the \code{"gamma"} parameter to the underlying UMAP call.
Default \code{1}.}

\item{externalReduction}{Pass DimReduce object if PCA computed through
other libraries. Default \code{NULL}.}
}
\value{
Updated sce object with UMAP computations stored
}
\description{
runScanpyUMAP
Computes UMAP from the given sce object and stores the UMAP computations back
into the sce object
}
\examples{
data(scExample, package = "singleCellTK")
\dontrun{
sce <- runScanpyNormalizeData(sce, useAssay = "counts")
sce <- runScanpyFindHVG(sce, useAssay = "counts")
sce <- runScanpyScaleData(sce, useAssay = "counts")
sce <- runScanpyPCA(sce, useAssay = "counts")
sce <- runScanpyFindClusters(sce, useAssay = "counts")
sce <- runScanpyUMAP(sce, useReduction = "scanpyPCA")
}
}
